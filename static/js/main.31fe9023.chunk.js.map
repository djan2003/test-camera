{"version":3,"sources":["API/Api.ts","redux/authReducer.ts","components/Login/Login.tsx","components/NavBar/NavBar.tsx","components/Test/OneCamera/OneCamera.jsx","components/Camera/Cameras/Camera.jsx","components/AddCamera/AddCamera.tsx","redux/usersReducer.ts","components/AddCite/AddCite.tsx","App.js","reportWebVitals.js","redux/camera-reducer.ts","redux/store.ts","index.js"],"names":["instance","axios","create","withCredentials","baseURL","authAPI","values","post","CameraAPI","name","get","UsersAPI","initialState","isLoggedIn","isFetching","userName","setIsLoggedInAC","type","setIsFetchingAC","Login","useSelector","state","auth","dispatch","useDispatch","formik","useFormik","initialValues","email","password","rememberMe","validate","errors","test","length","onSubmit","then","res","data","user","first_name","catch","error","console","log","finally","loginTC","resetForm","to","Grid","container","justify","AppBar","position","Toolbar","className","Button","item","xs","handleSubmit","FormControl","FormLabel","FormGroup","TextField","label","margin","getFieldProps","touched","style","color","FormControlLabel","control","Checkbox","variant","NavBar","background","onClick","placeholder","ref","React","createRef","OneCamera","props","src","autoPlay","controls","width","height","playerRef","index","Camera","srcCamera","map","cam","AddCamera","id","last_name","AddCite","useState","setDomain","setName","onChange","e","target","value","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","domain","rootReducer","combineReducers","action","camera","users","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31fe9023.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://tld.jollymanager.com/',\r\n\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(values: LoginParamsType) {\r\n        return instance.post(`/auth_app/login/`,\r\n            values);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(`auth/login`)\r\n    },\r\n\r\n}\r\nexport const CameraAPI = {\r\n    createCite(csrfmiddlewaretoken: any, domain: string, name: string) {\r\n        return instance.post(`/cameras/site/`,\r\n            {csrfmiddlewaretoken, domain, name});\r\n\r\n    },\r\n    getCite(name = 111) {\r\n        return instance.get(`/cameras/site/?${name}`,\r\n        );\r\n\r\n    },\r\n\r\n}\r\nexport const UsersAPI = {\r\n    getUsers() {\r\n        return instance.get(`user/`)\r\n    },\r\n}\r\n\r\n\r\n// types\r\nexport type LoginParamsType = any\r\n\r\n/*axios.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = \"Bearer\" + token;\r\n    return config;\r\n});*/\r\n\r\n/*instance.interceptors.response.use((response) => new Promise((resolve, reject) => {\r\n        token = response.data.access_token\r\n        console.log(response.data)\r\n    })\r\n    , error => {\r\n        if (!error.responce) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n        if (error.responce.status === 403) {\r\n            console.log(\"403 ошибка\")\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n    }\r\n)*/\r\n\r\n\r\n/*let token: any;\r\ninstance.interceptors.response.use((response) => new Promise((resolve, reject) => {\r\n    token=response.data.refresh_token\r\n        console.log(response.data.refresh_token)\r\n    })\r\n    , error => {\r\n        if (!error.responce) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n        if(error.responce.status===403){\r\n            console.log(\"403 ошибка\")\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n    }\r\n)\r\ninstance.interceptors.request.use(\r\n    (config) => new Promise((resolve, reject) => {\r\n       config.headers.authorization= `Bearer${token}`\r\n        return config\r\n    })\r\n    , error => {\r\n        if (!error.responce) {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n        if(error.responce.status===403){\r\n            console.log(\"403 ошибка\")\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => {\r\n                reject(error)\r\n            })\r\n        }\r\n    }\r\n)*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI, instance, LoginParamsType} from \"../API/Api\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    userName: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case 'login/SET-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'login/SET-USER-NAME':\r\n            return {...state, userName: action.userName}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', isLoggedIn} as const)\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) =>\r\n    ({type: 'login/SET-IS-FETCHING', isFetching} as const)\r\nexport const setUserNameAC = (userName: string) =>\r\n    ({type: 'login/SET-USER-NAME', userName} as const)\r\n\r\n// thunks\r\nexport const loginTC = (values: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setIsFetchingAC(true))\r\n    authAPI.login(values)\r\n        .then((res) => {\r\n            debugger\r\n                dispatch(setIsLoggedInAC(true))\r\n            dispatch(setUserNameAC(res.data.user.first_name))\r\n            }\r\n        )\r\n        .catch((error) => {\r\n            console.log('some error')\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsFetchingAC(false))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType = any","import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"../../redux/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<any>(state => state.auth.isLoggedIn)\r\n\r\n    const dispatch=useDispatch();\r\n    type FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        rememberMe?: boolean\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'minimum 3 symbol';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n           /* alert(JSON.stringify(values));*/\r\n            formik.resetForm()\r\n        },\r\n\r\n\r\n    })\r\n    if (isLoggedIn) {\r\n        return (\r\n            <Redirect to={\"/\"}/>\r\n        )\r\n\r\n    }\r\n    return <Grid container justify=\"center\">\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <NavLink className={\"link\"} to={\"/\"}>\r\n                    <Button>\r\n                        <span className={\"link\"}>Go Back</span>\r\n                    </Button>\r\n                </NavLink>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>if you have some problem write:</p>\r\n                        <p>Email: someMail@someMail.com</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.errors.email && formik.touched.email\r\n                            ? <div style={{color: \"red\"}}>{formik.errors.email}</div>\r\n                            : null\r\n                        }\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.errors.password && formik.touched.password\r\n                            ? <div style={{color: \"red\"}}>{formik.errors.password}</div>\r\n                            : null\r\n                        }\r\n                        <FormControlLabel\r\n                            label={'rememberMe'}\r\n                            control={<Checkbox/>}\r\n                            {...formik.getFieldProps(\"rememberMe\")}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\n","import React from \"react\";\r\nimport './styleNavBar.scss'\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setIsLoggedInAC} from \"../../redux/authReducer\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\n\r\n\r\nexport const NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>(state => state.auth.userName)\r\n    const logOut = () => {\r\n        dispatch(setIsLoggedInAC(false))\r\n    }\r\n    return (\r\n        <div className={'nav'}>\r\n            <AppBar style={{background: '#8080805e'}} color=\"inherit\" position=\"static\">\r\n                <div className={'headerItems'}>\r\n                    <Toolbar>\r\n                        <div>\r\n                            <div className={'link'}>\r\n                                <NavLink className={\"link\"} to={\"/add camera\"}>\r\n                                    <Button>\r\n                                        <span className={\"link\"}>Add New Camera</span>\r\n                                    </Button>\r\n                                </NavLink>\r\n                                <NavLink className={\"link\"} to={\"/add Cite\"}>\r\n                                    <Button>\r\n                                        <span className={\"link\"}>Add New Cite</span>\r\n                                    </Button>\r\n                                </NavLink>\r\n                                <NavLink className={\"link\"} to={\"/\"}>\r\n                                    <Button>\r\n                                        <span className={\"link\"}>Delete camera</span>\r\n                                    </Button>\r\n                                </NavLink>\r\n                                <NavLink className={\"link\"} to={\"/login\"}>\r\n                                    <Button onClick={logOut}>\r\n                                        <span className={\"link\"}>Log out</span>\r\n                                    </Button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </Toolbar>\r\n                    <div className={'user'}>{userName}</div>\r\n                   <div className={'input'}>\r\n                       <input className={'inputSearch'} type={'text'} placeholder={'выбор камеры'}/>\r\n                   </div>\r\n                </div>\r\n\r\n            </AppBar>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport ReactHlsPlayer from \"react-hls-player\";\r\nimport './styleOneCamera.scss'\r\n\r\nconst ref = React.createRef()\r\nexport const OneCamera = (props)=>{\r\n    return(\r\n        <div className={'oneCamera'}>\r\n            <div>\r\n                <ReactHlsPlayer\r\n                    src={props.src}\r\n                    autoPlay={true}\r\n                    controls={true}\r\n                    width=\"300px\"\r\n                    height=\"300px\"\r\n                    playerRef={ref}/>\r\n            </div>\r\n\r\n            <div>камера {props.index +1}</div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport './camera.scss';\r\nimport {NavBar} from \"../../NavBar/NavBar\";\r\nimport {OneCamera} from \"../../Test/OneCamera/OneCamera\";\r\n\r\n\r\nfunction Camera() {\r\n    let Camera1 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    let Camera2 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    let Camera3 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    let Camera4 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    let Camera5 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    let Camera6 = \"http://18.135.245.39:8080/stream/c5560d4a-2725-4302-8beb-56d29a32c8db/index.m3u8\"\r\n    const srcCamera = [Camera1, Camera2, Camera3, Camera4,Camera5,Camera6]\r\n    const ref = React.createRef()\r\n    return (\r\n        <div className={'mainContainer'}>\r\n            <div>\r\n                <div>\r\n                    <NavBar/>\r\n                </div>\r\n                <div>\r\n                    <div className={'cameras'}>\r\n                        {srcCamera.map((cam,index) => {\r\n                            return <OneCamera index={index} src={cam}/>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Camera;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const AddCamera = ()=>{\r\n    return(\r\n        <div>\r\n            <h2>Add Camera</h2>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux'\r\nimport {UsersAPI} from \"../API/Api\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    id: null,\r\n    first_name: null,\r\n    last_name: null,\r\n    email: null\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const UsersReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'users/GET-USERS':\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                first_name: action.first_name,\r\n                last_name: action.last_name,\r\n                email: action.email\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const getUsersAC = (id: any, first_name: any, last_name: any, email: any) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', id, first_name, last_name, email} as const)\r\n\r\n// thunks\r\nexport const getUsersTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    UsersAPI.getUsers()\r\n        .then((res) => {\r\n                dispatch(getUsersAC(res.data.id,res.data.first_name,res.data.last_name,res.data.email))\r\n            }\r\n        )\r\n        .catch((error) => {\r\n            console.log('some error')\r\n        })\r\n\r\n}\r\n\r\n// types\r\ntype ActionsType = any","import React, {MouseEventHandler, useContext, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCiteTC} from \"../../redux/camera-reducer\";\r\nimport {CameraAPI} from \"../../API/Api\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {getUsersTC} from \"../../redux/usersReducer\";\r\n\r\n\r\nexport const AddCite = ()=>{\r\n   const dispatch= useDispatch()\r\n    const [domain,setDomain]=useState('')\r\n    const[name,setName]= useState('')\r\n    const domainChangeHandler = (e:any)=>{\r\n        setDomain(e.target.value)\r\n    }\r\n    const nameChangeHandler = (e:any)=>{\r\n        setName(e.target.value)\r\n    }\r\n    const onClickHandler = ()=>{\r\n\r\n    }\r\n    const onClickGet = ()=>{\r\n        CameraAPI.getCite(111).then((res)=>console.log(res))\r\n    }\r\n    const getUsersOnClickHandler=()=>{\r\n       dispatch(getUsersTC())\r\n    }\r\n    return(\r\n        <div>\r\n            <h2>Add Cite</h2>\r\n            <input onChange={domainChangeHandler} type={'text'}/>\r\n            <input onChange={nameChangeHandler} type={'text'}/>\r\n            <button onClick={onClickHandler}>Добавить место</button>\r\n            <button onClick={onClickGet}>проверка запроса</button>\r\n            <button onClick={getUsersOnClickHandler} >Получить юзеров</button>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport './App.css';\nimport {Login} from \"./components/Login/Login\";\nimport Camera from \"./components/Camera/Cameras/Camera\";\nimport {BrowserRouter, HashRouter, Redirect, Switch, Route} from \"react-router-dom\";\nimport {AddCamera} from \"./components/AddCamera/AddCamera\";\nimport {AddCite} from \"./components/AddCite/AddCite\";\nimport {useSelector} from \"react-redux\";\n\nconst App = () => {\n\n    return <div className={\"app\"}>\n        <Switch>\n            <Route exact path={\"/\"} render={() => <Camera/>}/>\n            <Route path={\"/login\"} render={() => <Login/>}/>\n            <Route path={\"/add camera\"} render={() => <AddCamera/>}/>\n            <Route path={\"/add Cite\"} render={() => <AddCite/>}/>\n            <Route path={'/404'} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\n            <Redirect path={'*'} to={\"404\"}/>\n        </Switch>\n\n    </div>\n\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from 'redux'\r\nimport {authAPI, CameraAPI, LoginParamsType} from \"../API/Api\";\r\n\r\nconst initialState = {\r\n    domain: \"\",\r\n    name:\"\"\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cameraReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'camera/CREATE-CAMERA-CITE':\r\n            return {...state, domain: action.domain,name:action.name}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const createCameraCiteAC = (csrfmiddlewaretoken:any,domain: string,name:string) =>\r\n    ({type: 'camera/CREATE-CAMERA-CITE',csrfmiddlewaretoken, domain,name} as const)\r\n\r\n\r\n// thunks\r\n\r\nexport const createCiteTC = (csrfmiddlewaretoken:any,domain: string,name:string) => (dispatch: Dispatch<\r\n    ActionsType>) => {\r\n    CameraAPI.createCite(csrfmiddlewaretoken,domain,name)\r\n        .then((res) => {\r\n\r\n                dispatch(createCameraCiteAC(csrfmiddlewaretoken,domain,name))\r\n            }\r\n        )\r\n        .catch((error) => {\r\n            console.log('some error')\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType =any","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./authReducer\";\r\nimport {cameraReducer} from \"./camera-reducer\";\r\nimport {UsersReducer} from \"./usersReducer\";\r\n\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    camera:cameraReducer,\r\n    users:UsersReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}